/*! normalize.css v3.0.0 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8+, and Opera
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* $breakpoints: (
  'tablet': 768px,
  'desktop': 992px,
  'wall': 1200px
) !default; */
@keyframes dash {
  0% {
    stroke-dashoffset: 400;
    opacity: 0.7; }
  100% {
    stroke-dashoffset: 0;
    opacity: 1; } }

@keyframes opacity {
  0% {
    opacity: -5; }
  100% {
    opacity: 1; } }

@keyframes opacityHide {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@keyframes taglineFade {
  0% {
    opacity: 0;
    transform: translate(-10px, 0); }
  100% {
    opacity: 1;
    transform: translate(10px, 0); } }

header {
  position: relative;
  z-index: 2;
  padding: 20px 0; }
  header .logo__link {
    display: block;
    text-align: center; }
    header .logo__link::after {
      clear: both;
      content: "";
      display: table; }
    @media (min-width: 992px) {
      header .logo__link {
        float: left; } }
  header .logo {
    display: inline-block;
    max-width: 100%;
    height: auto; }
    header .logo .logo__lines path {
      animation: dash 3s cubic-bezier(0.25, 0.46, 0.45, 0.94) alternate forwards 0.5s, opacityHide 3s cubic-bezier(0.25, 0.46, 0.45, 0.94) alternate forwards 5.5s;
      stroke-dasharray: 400;
      stroke-dashoffset: 400; }
    header .logo .logo__fill path {
      animation: opacity 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) alternate forwards 5s;
      opacity: 0; }
    header .logo .logo__fill path:nth-child(1), header .logo .logo__lines path:nth-child(1) {
      animation-delay: 0.4s; }
    header .logo .logo__fill path:nth-child(2), header .logo .logo__lines path:nth-child(2) {
      animation-delay: 0.8s; }
    header .logo .logo__fill path:nth-child(3), header .logo .logo__lines path:nth-child(3) {
      animation-delay: 1.2s; }
    header .logo .logo__fill path:nth-child(4), header .logo .logo__lines path:nth-child(4) {
      animation-delay: 1.6s; }
    header .logo .logo__fill path:nth-child(5), header .logo .logo__lines path:nth-child(5) {
      animation-delay: 2s; }
    header .logo .logo__fill path:nth-child(6), header .logo .logo__lines path:nth-child(6) {
      animation-delay: 2.4s; }
    header .logo .logo__fill path:nth-child(7), header .logo .logo__lines path:nth-child(7) {
      animation-delay: 2.8s; }
    header .logo .logo__fill path:nth-child(8), header .logo .logo__lines path:nth-child(8) {
      animation-delay: 3.2s; }
    header .logo .logo__fill path:nth-child(9), header .logo .logo__lines path:nth-child(9) {
      animation-delay: 3.6s; }
    header .logo .logo__fill path:nth-child(10), header .logo .logo__lines path:nth-child(10) {
      animation-delay: 4s; }
    header .logo .logo__fill path:nth-child(11), header .logo .logo__lines path:nth-child(11) {
      animation-delay: 4.4s; }
    @media (min-width: 992px) {
      header .logo {
        float: left; } }
  header .header__tagline {
    transform: translate(0, 0);
    animation: taglineFade 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) alternate forwards 5s;
    margin: 4px 0 0 0px;
    font-size: 12px;
    opacity: 0;
    color: #fff;
    line-height: 20px;
    text-align: center; }
    @media (min-width: 992px) {
      header .header__tagline {
        float: left;
        margin-left: 10px;
        text-align: left; } }
    header .header__tagline .fa-envelope {
      margin-right: 5px; }
  header .header__inner {
    position: relative;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    width: 90%; }
    header .header__inner::after {
      clear: both;
      content: "";
      display: table; }

@media (min-width: 768px) and (max-width: 991px) {
  header .header__inner {
    max-width: 95%;
    margin-left: auto;
    margin-right: auto; }
    header .header__inner::after {
      clear: both;
      content: "";
      display: table; } }

@media (min-width: 992px) and (max-width: 1199px) {
  header .header__inner {
    max-width: 95%;
    margin-left: auto;
    margin-right: auto; }
    header .header__inner::after {
      clear: both;
      content: "";
      display: table; } }
    @media (min-width: 1200px) {
      header .header__inner {
        max-width: 95%;
        margin-left: auto;
        margin-right: auto; }
        header .header__inner::after {
          clear: both;
          content: "";
          display: table; } }

footer {
  position: fixed;
  bottom: 0;
  background: #282828;
  width: 100%;
  padding: 20px; }
  footer .footer__inner {
    position: relative;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    width: 90%;
    color: #fff; }
    footer .footer__inner::after {
      clear: both;
      content: "";
      display: table; }

@media (min-width: 768px) and (max-width: 991px) {
  footer .footer__inner {
    max-width: 95%;
    margin-left: auto;
    margin-right: auto; }
    footer .footer__inner::after {
      clear: both;
      content: "";
      display: table; } }

@media (min-width: 992px) and (max-width: 1199px) {
  footer .footer__inner {
    max-width: 95%;
    margin-left: auto;
    margin-right: auto; }
    footer .footer__inner::after {
      clear: both;
      content: "";
      display: table; } }
    @media (min-width: 1200px) {
      footer .footer__inner {
        max-width: 95%;
        margin-left: auto;
        margin-right: auto; }
        footer .footer__inner::after {
          clear: both;
          content: "";
          display: table; } }

.project {
  width: 100%;
  z-index: 2; }
  .project::after {
    clear: both;
    content: "";
    display: table; }
  .project .project__screen {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    margin-bottom: 40px; }
    .project .project__screen .project__dot--1, .project .project__screen .project__dot--2, .project .project__screen .project__dot--3 {
      width: 100px;
      height: 100px;
      border-radius: 100px;
      flex: 1;
      transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      transform: translateX(-20px) rotate(-10deg);
      opacity: 0;
      max-width: 100px;
      color: #fff;
      font-size: 14px;
      text-align: center; }
      .project .project__screen .project__dot--1 .fa, .project .project__screen .project__dot--2 .fa, .project .project__screen .project__dot--3 .fa {
        color: #fff;
        display: block;
        font-size: 18px;
        text-align: center;
        padding: 20px 0 10px 0; }
        @media (min-width: 768px) {
          .project .project__screen .project__dot--1 .fa, .project .project__screen .project__dot--2 .fa, .project .project__screen .project__dot--3 .fa {
            padding: 30px 0 10px 0;
            font-size: 40px; } }
      .project .project__screen .project__dot--1 .project__task, .project .project__screen .project__dot--2 .project__task, .project .project__screen .project__dot--3 .project__task {
        transform: translateX(-10px);
        transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        opacity: 0;
        font-size: 13px;
        font-weight: 700;
        line-height: 20px; }
        @media (min-width: 768px) {
          .project .project__screen .project__dot--1 .project__task, .project .project__screen .project__dot--2 .project__task, .project .project__screen .project__dot--3 .project__task {
            font-size: 16px; } }
      @media (min-width: 768px) {
        .project .project__screen .project__dot--1, .project .project__screen .project__dot--2, .project .project__screen .project__dot--3 {
          width: 150px;
          height: 150px;
          border-radius: 150px;
          max-width: 150px; } }
    .project .project__screen .project__dot--1 {
      background: #2196F3;
      transition-delay: 0s; }
      .project .project__screen .project__dot--1 .project__task {
        transition-delay: 0.2s; }
    .project .project__screen .project__dot--2 {
      background: #8f6b92;
      transition-delay: 0.1s; }
      .project .project__screen .project__dot--2 .project__task {
        transition-delay: 0.3s; }
    .project .project__screen .project__dot--3 {
      background: #F44336;
      transition-delay: 0.2s; }
      .project .project__screen .project__dot--3 .project__task {
        transition-delay: 0.4s; }
  .project .project__description {
    position: relative;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    width: 90%;
    color: #fff;
    line-height: 22px;
    padding-bottom: 100px; }
    .project .project__description::after {
      clear: both;
      content: "";
      display: table; }

@media (min-width: 768px) and (max-width: 991px) {
  .project .project__description {
    max-width: 95%;
    margin-left: auto;
    margin-right: auto; }
    .project .project__description::after {
      clear: both;
      content: "";
      display: table; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .project .project__description {
    max-width: 95%;
    margin-left: auto;
    margin-right: auto; }
    .project .project__description::after {
      clear: both;
      content: "";
      display: table; } }
    @media (min-width: 1200px) {
      .project .project__description {
        max-width: 95%;
        margin-left: auto;
        margin-right: auto; }
        .project .project__description::after {
          clear: both;
          content: "";
          display: table; } }
    .project .project__description h1, .project .project__description h2 {
      line-height: 36px; }
  .project .project__close {
    position: fixed;
    bottom: 0;
    transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
    width: 100%;
    background: rgba(0, 0, 0, 0.3);
    text-align: center;
    z-index: 10;
    opacity: 0;
    color: #fff;
    display: block;
    padding: 15px 40px;
    line-height: 30px;
    pointer-events: none; }
    .project .project__close:hover {
      cursor: pointer;
      will-change: transform, opacity; }
      .project .project__close:hover ~ .project__close,
      .project .project__close:hover ~ .project__screen .project__dot--1,
      .project .project__close:hover ~ .project__screen .project__dot--2,
      .project .project__close:hover ~ .project__screen .project__dot--3,
      .project .project__close:hover ~ .project__description {
        will-change: transform, opacity; }
    .project .project__close .fa {
      font-size: 14px;
      margin-left: 10px; }
    @media (min-width: 768px) {
      .project .project__close {
        position: absolute;
        top: -165px;
        right: 0px;
        bottom: auto;
        left: auto;
        background: transparent;
        padding: 30px 40px;
        width: auto; } }
  .project .project__description {
    transform: translate(-10px);
    transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
    opacity: 0; }

.project__buttons {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  flex-wrap: wrap;
  width: 100%;
  z-index: 5; }
  @media (min-width: 768px) {
    .project__buttons {
      flex-wrap: nowrap; } }
  .project__buttons .project__title {
    border: 100%;
    transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    flex: 1;
    border-radius: 100%;
    position: relative;
    width: 200px;
    height: 200px;
    max-width: 200px;
    pointer-events: auto;
    color: #fff;
    z-index: 3;
    margin: 0 20px 20px 20px;
    text-align: center;
    padding: 20px; }
    .project__buttons .project__title:before {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: 100%;
      transform: scale(1);
      transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      opacity: 0;
      content: '';
      background: transparent; }
    .project__buttons .project__title:hover {
      transform: translateY(-3px);
      cursor: pointer;
      will-change: transform, opacity; }
      .project__buttons .project__title:hover:before {
        transform: scale(1.05);
        opacity: 1; }
      .project__buttons .project__title:hover ~ .project__close,
      .project__buttons .project__title:hover ~ .project__screen .project__dot--1,
      .project__buttons .project__title:hover ~ .project__screen .project__dot--2,
      .project__buttons .project__title:hover ~ .project__screen .project__dot--3,
      .project__buttons .project__title:hover ~ .project__description {
        will-change: transform, opacity; }
      @media (min-width: 768px) {
        .project__buttons .project__title:hover .project__heading {
          opacity: 1; } }
    .project__buttons .project__title svg {
      width: 100%;
      height: auto; }
    @media (min-width: 768px) {
      .project__buttons .project__title {
        width: 200px;
        height: 200px;
        max-width: 200px;
        font-size: 14px; } }
    @media (min-width: 992px) {
      .project__buttons .project__title {
        width: 200px;
        height: 200px;
        max-width: 200px; } }
    @media (min-width: 1200px) {
      .project__buttons .project__title {
        width: 300px;
        height: 300px;
        max-width: 300px; } }
  .project__buttons .project__heading {
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    opacity: 0;
    width: 90%; }
    @media (min-width: 768px) {
      .project__buttons .project__heading {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); } }

input.project-1:checked ~ main .project__buttons, input.project-2:checked ~ main .project__buttons, input.project-3:checked ~ main .project__buttons {
  pointer-events: none;
  max-height: 0; }

input.project-1:checked ~ main:before, input.project-2:checked ~ main:before, input.project-3:checked ~ main:before {
  background: #2196f3;
  /* Old browsers */
  background: -moz-linear-gradient(top, #2196f3 0%, #8f6b92 50%, #f44336 100%);
  /* FF3.6-15 */
  background: -webkit-linear-gradient(top, #2196f3 0%, #8f6b92 50%, #f44336 100%);
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to bottom, #2196f3 0%, #8f6b92 50%, #f44336 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#2196f3', endColorstr='#f44336',GradientType=0 );
  /* IE6-9 */ }

section.project-1, section.project-2, section.project-3 {
  max-height: 0;
  overflow: hidden; }

input.project-1:checked ~ main .project__title[for="project-1"] {
  transform: rotate(0deg) scale(1.2);
  opacity: 0;
  pointer-events: none; }

input.project-1:checked ~ main .project__title[for="project-2"], input.project-1:checked ~ main .project__title[for="project-3"] {
  transform: rotate(45deg) scale(0);
  opacity: 0;
  pointer-events: none; }

input.project-1:checked ~ main .project-2, input.project-1:checked ~ main .project-3 {
  pointer-events: none; }

input.project-1:checked ~ main .project-1 {
  max-height: 1000px;
  overflow: visible; }
  input.project-1:checked ~ main .project-1 .project__screen .project__dot--1, input.project-1:checked ~ main .project-1 .project__screen .project__dot--2, input.project-1:checked ~ main .project-1 .project__screen .project__dot--3 {
    transform: translateX(0px) rotate(0deg);
    opacity: 1; }
  input.project-1:checked ~ main .project-1 .project__screen .project__task {
    transform: translateX(0px);
    opacity: 1; }
  input.project-1:checked ~ main .project-1 .project__close {
    transition-delay: 0.4s;
    transform: translateX(0px);
    opacity: 1;
    pointer-events: auto; }
  input.project-1:checked ~ main .project-1 .project__description {
    transform: translateX(0px);
    transition-delay: 0.6s;
    opacity: 1; }

input.project-2:checked ~ main .project__title[for="project-2"] {
  transform: rotate(0deg) scale(1.2);
  opacity: 0;
  pointer-events: none; }

input.project-2:checked ~ main .project__title[for="project-1"], input.project-2:checked ~ main .project__title[for="project-3"] {
  transform: rotate(45deg) scale(0);
  opacity: 0;
  pointer-events: none; }

input.project-2:checked ~ main .project-1, input.project-2:checked ~ main .project-3 {
  pointer-events: none; }

input.project-2:checked ~ main .project-2 {
  max-height: 1000px;
  overflow: visible; }
  input.project-2:checked ~ main .project-2 .project__screen .project__dot--1, input.project-2:checked ~ main .project-2 .project__screen .project__dot--2, input.project-2:checked ~ main .project-2 .project__screen .project__dot--3 {
    transform: translateX(0px) rotate(0deg);
    opacity: 1; }
  input.project-2:checked ~ main .project-2 .project__screen .project__task {
    transform: translateX(0px);
    opacity: 1; }
  input.project-2:checked ~ main .project-2 .project__close {
    transition-delay: 0.4s;
    transform: translateX(0px);
    opacity: 1;
    pointer-events: auto; }
  input.project-2:checked ~ main .project-2 .project__description {
    transform: translateX(0px);
    transition-delay: 0.6s;
    opacity: 1; }

input.project-3:checked ~ main .project__title[for="project-3"] {
  transform: rotate(0deg) scale(1.2);
  opacity: 0;
  pointer-events: none; }

input.project-3:checked ~ main .project__title[for="project-1"], input.project-3:checked ~ main .project__title[for="project-2"] {
  transform: rotate(45deg) scale(0);
  opacity: 0;
  pointer-events: none; }

input.project-3:checked ~ main .project-1, input.project-3:checked ~ main .project-2 {
  pointer-events: none; }

input.project-3:checked ~ main .project-3 {
  max-height: 1000px;
  overflow: visible; }
  input.project-3:checked ~ main .project-3 .project__screen .project__dot--1, input.project-3:checked ~ main .project-3 .project__screen .project__dot--2, input.project-3:checked ~ main .project-3 .project__screen .project__dot--3 {
    transform: translateX(0px) rotate(0deg);
    opacity: 1; }
  input.project-3:checked ~ main .project-3 .project__screen .project__task {
    transform: translateX(0px);
    opacity: 1; }
  input.project-3:checked ~ main .project-3 .project__close {
    transition-delay: 0.4s;
    transform: translateX(0px);
    opacity: 1;
    pointer-events: auto; }
  input.project-3:checked ~ main .project-3 .project__description {
    transform: translateX(0px);
    transition-delay: 0.6s;
    opacity: 1; }

.content__intro {
  position: relative;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  width: 90%; }
  .content__intro::after {
    clear: both;
    content: "";
    display: table; }

@media (min-width: 768px) and (max-width: 991px) {
  .content__intro {
    max-width: 95%;
    margin-left: auto;
    margin-right: auto; }
    .content__intro::after {
      clear: both;
      content: "";
      display: table; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .content__intro {
    max-width: 95%;
    margin-left: auto;
    margin-right: auto; }
    .content__intro::after {
      clear: both;
      content: "";
      display: table; } }
  @media (min-width: 1200px) {
    .content__intro {
      max-width: 95%;
      margin-left: auto;
      margin-right: auto; }
      .content__intro::after {
        clear: both;
        content: "";
        display: table; } }

html {
  min-height: 100vh;
  z-index: 1;
  display: block;
  background: #2196f3;
  /* Old browsers */
  background: -moz-linear-gradient(top, #2196f3 0%, #8f6b92 50%, #f44336 100%);
  /* FF3.6-15 */
  background: -webkit-linear-gradient(top, #2196f3 0%, #8f6b92 50%, #f44336 100%);
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to bottom, #2196f3 0%, #8f6b92 50%, #f44336 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#2196f3', endColorstr='#f44336',GradientType=0 );
  /* IE6-9 */ }
  @media (min-width: 768px) {
    html {
      background: #2196f3;
      /* Old browsers */
      background: -moz-linear-gradient(-45deg, #2196f3 0%, #f44336 100%);
      /* FF3.6-15 */
      background: -webkit-linear-gradient(-45deg, #2196f3 0%, #f44336 100%);
      /* Chrome10-25,Safari5.1-6 */
      background: linear-gradient(135deg, #2196f3 0%, #f44336 100%);
      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#2196f3', endColorstr='#f44336',GradientType=1 );
      /* IE6-9 fallback on horizontal gradient */ } }

body {
  font-family: Lato, arial;
  font-weight: 400;
  color: #fff;
  font-size: 14px;
  line-height: 28px; }

main::after {
  clear: both;
  content: "";
  display: table; }

a {
  color: #eee; }

input[type="checkbox"] {
  display: none; }

::-moz-selection {
  color: #fff;
  background: #8f6b92; }

::selection {
  color: #fff;
  background: #8f6b92; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
